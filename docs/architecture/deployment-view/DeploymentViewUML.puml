@startuml
' Set skin parameters for a clean, non-handwritten style
skinparam shadowing true
skinparam defaultFontName "Courier New"
skinparam dpi 150
skinparam useBetaStyle true
skinparam package {
    BorderColor black
    FontColor black
    BackgroundColor #LightBlue
}
skinparam node {
    BorderColor black
    FontColor black
    BackgroundColor #LightGreen
}
skinparam cloud {
    BorderColor black
    FontColor black
    BackgroundColor #LightGray
}
skinparam component {
    BorderColor black
    FontColor black
    BackgroundColor #LightYellow
}
skinparam database {
    BorderColor black
    FontColor black
    BackgroundColor #LightCoral
}

' Increase default font size to make objects appear larger
skinparam defaultFontsize 16

' Define the User as an actor
actor "User" as user

' Define the Internet cloud
cloud "Internet" as internet

' Define the Yandex Cloud environment
cloud "Yandex Cloud" {
    ' Define the main Server node with Ubuntu 24.04 as a server
    node "Server (Ubuntu 24.04)" as server <<server>> {
        ' Define Docker as the execution environment
        node "Docker" as docker <<execution environment>> {
            ' Define Backend-DB as a database
            database "Backend-DB" as backendDb <<database>>
            ' Define Backend as a service component
            component "Backend" as backend <<service>>
            ' Define Chroma as a database
            database "Chroma" as chroma <<database>>
            ' Define Frontend as a service component
            component "Frontend" as frontend <<service>>
            database "Postgres" as postgres <<database>>
            database "MySQL" as mysql <<database>>
            database "MongoDB" as mongodb <<database>>
        }
    }
}

' Define the GitHub Actions as an execution environment
node "GitHub Actions" as githubActions <<execution environment>>

' Define the relationships between the components

' User interacts with the Internet
user -- internet

' Internet connects to the Server (acting as Device Node)
internet -- server : "Device Node Access"

' Server (acting as Execution Node) handles deployment
githubActions --> server : "Deployment (Execution Node)"

' Frontend sends API requests to Backend
frontend --> backend : "API Requests (RestAPI)"

' Backend communicates with other services via RestAPI
backend --> backendDb : "API Requests (RestAPI)"
backend --> chroma : "API Requests (RestAPI)"
backend --> postgres : "API Requests (RestAPI)"
backend --> mysql : "API Requests (RestAPI)"
backend --> mongodb : "API Requests (RestAPI)"

' Removed: Backend-DB handles user authentication
' backendDb -- "User Authentication"

@enduml
