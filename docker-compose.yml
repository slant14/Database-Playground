services:

  haskell_api:
    build:
      context: ./backend-46/core/chroma/Parser
    ports:
      - "8080:8080"

  backend-db:
    image: postgres:15
    container_name: backend-db
    environment:
      POSTGRES_DB: backend_db
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "7000:5432"
    volumes:
      - backend_pgdata:/var/lib/postgresql/data
      - ./backend-46/core/media:/app/backend/core/media

  backend:
    build: ./backend-46/
    volumes:
      - ./backend-46/core:/app
    ports:
      - "8000:8000"
    depends_on:
      - backend-db
    environment:
      - DEBUG=True
      - ALLOWED_HOSTS=*
      - SECRET_KEY=${SECRET_KEY}
      - POSTGRES_DB=backend_db
      - POSTGRES_HOST=backend-db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
    command: >
        sh -c " 
                # Try normal migration first
                python manage.py makemigrations 2>/dev/null &&
                python manage.py migrate 2>/dev/null ||
                # If that fails, reset migrations completely  
                (echo 'Migration dependency error detected, resetting...' &&
                 find /app -path '*/migrations/*.py' -not -name '__init__.py' -delete 2>/dev/null || true &&
                 python manage.py makemigrations &&
                 python manage.py migrate --fake-initial &&
                 python manage.py migrate) &&
                python manage.py create_superuser_if_none && 
                python manage.py runserver 0.0.0.0:8000"

  chroma:
    build:
      context: ./backend-46/core/chroma
    volumes:
      - ./backend-46/core/chroma:/app
      - ./backend-46/playground:/app/playground
    ports:
      - "9000:9000"
    environment:
      - PYTHONPATH=/app

  frontend-37:
    build: ./frontend-37
    ports:
      - "5173:5173"
    volumes:
      - ./frontend-37:/app
      - /app/node_modules
    environment:
      VITE_PROD: ${PROD}

  postgres:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_pgdata:/var/lib/postgresql/data

  mongodb:
    image: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - ./mongo_data:/data/db

  frontend-46:
    build:
      context: ./frontend-46
      dockerfile: Dockerfile
      target: build
      args:
        REACT_APP_API_URL: http://localhost:8000
    ports:
      - "3000:3000"

  # mysql:
  #   image: mysql:8.0
  #   ports:
  #     - "3306:3306"
  #   environment:
  #     MYSQL_USER: ${MYSQL_USER}
  #     MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  #   volumes:
  #     - ./mysql_data:/var/lib/mysql


volumes:
  backend_pgdata:
  postgres_pgdata:
