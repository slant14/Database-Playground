name: Deploy Project

on:
  #push:
  #  branches:
  #    - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        timeout: 3600s
        command_timeout: 3600s
        script: |
          echo "Checking and installing Docker if needed..."
          if ! command -v docker &> /dev/null; then
            echo "Docker not found, installing..."
            sudo apt-get update
            sudo apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
            echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt-get update
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io
            sudo usermod -aG docker $USER
            echo "Docker installed successfully!"
          else
            echo "Docker is already installed"
          fi
          
          echo "Checking and installing Docker Compose if needed..."
          if ! command -v docker-compose &> /dev/null; then
            echo "Docker Compose not found, installing..."
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            echo "Docker Compose installed successfully!"
          else
            echo "Docker Compose is already installed"
          fi
          
          cd /home/${{ secrets.SERVER_USERNAME }}/DP-fork || {
            echo "Repository not found, cloning..."
            git clone https://github.com/${{ github.repository }}.git DP-fork
            cd DP-fork
          }
          
          echo "Resetting any local changes and pulling latest changes..."
          git fetch origin main
          git reset --hard origin/main
          
          echo "Stopping existing containers..."
          sudo docker-compose down

          echo "Building containers..."
          sudo docker-compose build --build-arg REACT_APP_API_URL=http://${{ secrets.SERVER_IP }}:8000

<<<<<<< HEAD
          echo "Starting containers..."
          sudo docker-compose up -d
          
          echo "Deployment completed!"
=======
      - name: Add server to known_hosts
        run: |
          ssh-keyscan -p ${{ secrets.DEPLOY_PORT }} ${{ secrets.DEPLOY_IP }} >> ~/.ssh/known_hosts
        shell: bash

      - name: Deploy to server via SSH
        run: |
          ssh -i ~/.ssh/deploy_key -p ${{ secrets.DEPLOY_PORT }} ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_IP }} << 'EOF'
            set -e
            cd ~/Database-Playground
            git pull
            docker compose build
            docker compose up -d
          EOF
        shell: bash
>>>>>>> upstream/main
